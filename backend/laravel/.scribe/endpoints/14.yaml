name: Documents
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/document
    metadata:
      groupName: Documents
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        List documents for a specific project.

        This endpoint allows you to retrieve a paginated list of documents for a specific project.
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      project:
        name: project
        description: 'The ID of the project.'
        required: true
        example: '1'
        type: string
        enumValues: []
        custom: []
      fileType:
        name: fileType
        description: 'The type of the document.'
        required: false
        example: "'pdf'"
        type: string
        enumValues: []
        custom: []
      perpage:
        name: perpage
        description: 'The number of documents to show per page.'
        required: false
        example: 10
        type: integer
        enumValues: []
        custom: []
      page:
        name: page
        description: 'The current page of documents to retrieve.'
        required: false
        example: 1
        type: integer
        enumValues: []
        custom: []
      total:
        name: total
        description: 'The total number of pages available.'
        required: false
        example: 5
        type: integer
        enumValues: []
        custom: []
    cleanQueryParameters:
      project: '1'
      fileType: "'pdf'"
      perpage: 10
      page: 1
      total: 5
    bodyParameters:
      project:
        name: project
        description: ''
        required: true
        example: voluptatibus
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      project: voluptatibus
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "status": "success",
              "data": [
                  {
                      "id": 1,
                      "file_name": "document.pdf",
                      "file_type": "pdf",
                      "project_id": 1,
                      "created_at": "2023-10-30T12:00:00Z"
                  },
                  {
                      "id": 2,
                      "file_name": "document2.pdf",
                      "file_type": "pdf",
                      "project_id": 1,
                      "created_at": "2023-10-31T12:00:00Z"
                  }
                  // More document objects
              ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
              "status": "error",
              "message": "Ensure that all required fields are properly filled."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer PeE61bdZ5chkvD6agV3f4a8'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/document/create
    metadata:
      groupName: Documents
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Upload a document for a specific project.

        This endpoint allows you to upload a document for a specific project.
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      project:
        name: project
        description: 'The ID of the project.'
        required: false
        example: '1'
        type: required
        enumValues: []
        custom: []
      title:
        name: title
        description: 'The title of the document.'
        required: false
        example: "'Project Report'"
        type: required
        enumValues: []
        custom: []
      file:
        name: file
        description: 'The document file to upload.'
        required: false
        example: (binary)
        type: required
        enumValues: []
        custom: []
      fileType:
        name: fileType
        description: 'The type of the document.'
        required: false
        example: "'pdf'"
        type: required
        enumValues: []
        custom: []
    cleanBodyParameters:
      project: '1'
      title: "'Project Report'"
      file: (binary)
      fileType: "'pdf'"
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "status": "success",
              "message": "Document uploaded successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
              "status": "error",
              "message": "Ensure that all required fields are properly filled."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer EZbaPaD14kdgVvh5fc3e686'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/document/show/{id}'
    metadata:
      groupName: Documents
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Get details of a specific document.

        This endpoint allows you to retrieve details of a specific document by providing its ID.
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
    urlParameters:
      id:
        name: id
        description: 'The ID of the document.'
        required: true
        example: '1'
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "data": {
                  "id": 1,
                  "project_id": 2,
                  "document_title": "Project Report",
                  "file_type": "pdf",
                  "file_path": "images/projects_document/2/document.pdf",
                  "log_user_id": 3,
                  "status": 1,
                  "created_at": "2023-10-30T12:00:00Z",
                  "updated_at": "2023-10-30T14:30:00Z"
              },
              "status": "success",
              "message": "Document details retrieved successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
              "status": "error",
              "message": "Document not found."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6haeDZP3Vkf4db651cagEv8'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/document/delete/{id}'
    metadata:
      groupName: Documents
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Delete a document.

        This endpoint allows you to delete a specific document by providing its ID.
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
    urlParameters:
      id:
        name: id
        description: 'The ID of the document.'
        required: true
        example: '1'
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "status": "success",
              "message": "Document deleted successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
              "status": "error",
              "message": "We could not delete this record. Please try again."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
              "status": "error",
              "message": "Document not found."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer b3k5E4vh8DPd66ZVfaacg1e'
    controller: null
    method: null
    route: null
    custom: []
