name: Projects
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/project
    metadata:
      groupName: Projects
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a paginated list of projects.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
    urlParameters:
      page:
        name: page
        description: 'optional The page number (default is 1).'
        required: false
        example: 2
        type: integer
        enumValues: []
        custom: []
      perpage:
        name: perpage
        description: 'optional Items per page (default is 10).'
        required: false
        example: 8
        type: integer
        enumValues: []
        custom: []
      total:
        name: total
        description: 'optional The total number of items.'
        required: false
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      page: 2
      perpage: 8
      total: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "status": "success",
             "data": [
                 {
                     "id": 1,
                     "name": "Project Name",
                     "address": {
                         "id": 1,
                         "street": "Street Name",
                         "city": "City Name",
                         "state": "State Name",
                         "country": "Country Name"
                     },
                     "manager": {
                         "id": 1,
                         "name": "Manager Name"
                     },
                     "client": {
                         "id": 1,
                         "name": "Client Name"
                     }
                 }
             ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer a58bkcghfVv6E41e6DaZPd3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/project/create
    metadata:
      groupName: Projects
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new project.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: multipart/form-data
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the project.'
        required: true
        example: voluptas
        type: string
        enumValues: []
        custom: []
      manager:
        name: manager
        description: 'The ID of the project manager.'
        required: true
        example: 5
        type: integer
        enumValues: []
        custom: []
      address:
        name: address
        description: 'The full address of the project.'
        required: true
        example: voluptatem
        type: string
        enumValues: []
        custom: []
      description:
        name: description
        description: 'The project description.'
        required: true
        example: 'Sed eum aut aliquid harum aut quia.'
        type: string
        enumValues: []
        custom: []
      number_of_properties:
        name: number_of_properties
        description: 'The number of properties in the project.'
        required: true
        example: 8
        type: integer
        enumValues: []
        custom: []
      client:
        name: client
        description: 'The ID of the client.'
        required: true
        example: 10
        type: integer
        enumValues: []
        custom: []
      start_date:
        name: start_date
        description: 'The project start date (YYYY-MM-DD).'
        required: true
        example: culpa
        type: date
        enumValues: []
        custom: []
      end_date:
        name: end_date
        description: 'The project end date (YYYY-MM-DD).'
        required: true
        example: voluptatem
        type: date
        enumValues: []
        custom: []
      image:
        name: image
        description: 'An image file for the project.'
        required: true
        example: null
        type: file
        enumValues: []
        custom: []
    cleanBodyParameters:
      name: voluptas
      manager: 5
      address: voluptatem
      description: 'Sed eum aut aliquid harum aut quia.'
      number_of_properties: 8
      client: 10
      start_date: culpa
      end_date: voluptatem
    fileParameters:
      image: null
    responses:
      -
        status: 200
        content: |-
          {
             "status": "success",
             "message": "Project created successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
             "status": "error",
             "message": "Failed to create the project."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Zdc4kaP6h1bDgV5Eea8v6f3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/project/show/{id}'
    metadata:
      groupName: Projects
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get details of a project by ID.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
    urlParameters:
      id:
        name: id
        description: 'The ID of the project.'
        required: true
        example: magnam
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: magnam
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "status": "success",
             "data": {
                 "id": 1,
                 "name": "Project Name",
                 "address": {
                     "id": 1,
                     "street": "Street Name",
                     "city": "City Name",
                     "state": "State Name",
                     "country": "Country Name"
                 },
                 "manager": {
                     "id": 1,
                     "name": "Manager Name"
                 },
                 "client": {
                     "id": 1,
                     "name": "Client Name"
                 }
             }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
             "status": "error",
             "message": "Project with ID {id} not found."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 15Pf6v8dE3kZha6caVDge4b'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/project/update/{id}'
    metadata:
      groupName: Projects
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a project by ID.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the project to update.'
        required: true
        example: voluptatem
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: voluptatem
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the project.'
        required: true
        example: deserunt
        type: string
        enumValues: []
        custom: []
      manager:
        name: manager
        description: 'The ID of the project manager.'
        required: true
        example: 17
        type: integer
        enumValues: []
        custom: []
      address:
        name: address
        description: 'The full address of the project.'
        required: true
        example: facilis
        type: string
        enumValues: []
        custom: []
      description:
        name: description
        description: 'The project description.'
        required: true
        example: 'Suscipit quos quaerat harum autem odit qui debitis id.'
        type: string
        enumValues: []
        custom: []
      number_of_properties:
        name: number_of_properties
        description: 'The number of properties in the project.'
        required: true
        example: 13
        type: integer
        enumValues: []
        custom: []
      client:
        name: client
        description: 'The ID of the client.'
        required: true
        example: 18
        type: integer
        enumValues: []
        custom: []
      start_date:
        name: start_date
        description: 'The project start date (YYYY-MM-DD).'
        required: true
        example: aut
        type: date
        enumValues: []
        custom: []
      end_date:
        name: end_date
        description: 'The project end date (YYYY-MM-DD).'
        required: true
        example: magnam
        type: date
        enumValues: []
        custom: []
      image:
        name: image
        description: 'The image URL for the project.'
        required: false
        example: quo
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      name: deserunt
      manager: 17
      address: facilis
      description: 'Suscipit quos quaerat harum autem odit qui debitis id.'
      number_of_properties: 13
      client: 18
      start_date: aut
      end_date: magnam
      image: quo
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "status": "success",
             "message": "Project updated successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
             "status": "error",
             "message": "Failed to update the project."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer k34vbdhPEc6Ze6faDg8V51a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/project/destroy/{id}'
    metadata:
      groupName: Projects
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a project by ID.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
    urlParameters:
      id:
        name: id
        description: 'The ID of the project to delete.'
        required: true
        example: fugit
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: fugit
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "status": "success",
             "message": "Project deleted successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
             "status": "error",
             "message": "Failed to delete the project."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer chaV13kgED8d6Zae6Pf4bv5'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/project/search
    metadata:
      groupName: Projects
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Search for projects by name, description, number of properties, start date, or end date.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      query:
        name: query
        description: 'The search query.'
        required: true
        example: minima
        type: string
        enumValues: []
        custom: []
      page:
        name: page
        description: 'The page number (default is 1).'
        required: false
        example: 4
        type: integer
        enumValues: []
        custom: []
      perpage:
        name: perpage
        description: 'The number of results per page (default is 10).'
        required: false
        example: 3
        type: integer
        enumValues: []
        custom: []
    cleanQueryParameters:
      query: minima
      page: 4
      perpage: 3
    bodyParameters:
      query:
        name: query
        description: ''
        required: true
        example: quia
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      query: quia
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "status": "success",
             "data": {
                 "projects": [
                     {
                         "id": 1,
                         "name": "Project Name",
                         "description": "Project Description",
                         "number_of_properties": 10,
                         "start_date": "2023-01-01",
                         "end_date": "2023-12-31"
                     },
                     {
                         "id": 2,
                         "name": "Another Project",
                         "description": "Another Description",
                         "number_of_properties": 5,
                         "start_date": "2023-02-15",
                         "end_date": "2023-11-30"
                     }
                 ]
             }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
             "status": "error",
             "message": "No records match your search."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer EDa4Zbdv8ch156Pak63gefV'
    controller: null
    method: null
    route: null
    custom: []
