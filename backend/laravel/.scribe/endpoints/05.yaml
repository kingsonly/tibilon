name: Material
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/material/all
    metadata:
      groupName: Material
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all materials with their associated material types.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "status": "success",
             "data": [
                 {
                     "id": 1,
                     "name": "Material Name",
                     "materialType": {
                         "id": 1,
                         "name": "Material Type Name",
                         "material_id": 1,
                         "unit_id": 1
                     }
                 }
             ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Pb1hdv53ekaEZDa86fc64Vg'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/material
    metadata:
      groupName: Material
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a paginated list of materials.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
    urlParameters:
      page:
        name: page
        description: 'optional The page number (default is 1).'
        required: false
        example: 5
        type: integer
        enumValues: []
        custom: []
      perpage:
        name: perpage
        description: 'optional Items per page (default is 10).'
        required: false
        example: 11
        type: integer
        enumValues: []
        custom: []
      total:
        name: total
        description: 'optional The total number of items.'
        required: false
        example: 6
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      page: 5
      perpage: 11
      total: 6
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "status": "success",
             "data": [
                 {
                     "id": 1,
                     "name": "Material Name",
                     "materialType": {
                         "id": 1,
                         "name": "Material Type Name",
                         "material_id": 1,
                         "unit_id": 1
                     }
                 }
             ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer f6a4PV83cD5e6kgdbahZEv1'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/material/create
    metadata:
      groupName: Material
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new material.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the material.'
        required: true
        example: aut
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      name: aut
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "status": "success",
             "message": "Material created successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
             "status": "error",
             "message": "Failed to create the material."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ca61DvEagf3P45dk6hZ8bVe'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/material/show/{id}'
    metadata:
      groupName: Material
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a material by ID.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the material to update.'
        required: true
        example: illo
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: illo
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The new name of the material.'
        required: true
        example: quia
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      name: quia
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "status": "success",
             "message": "Material updated successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
             "status": "error",
             "message": "Failed to update the material."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
             "status": "error",
             "message": "Material with ID {id} not found."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4ZgDc6vd5kPf6h8aE1V3eab'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/material/update/{id}'
    metadata:
      groupName: Material
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a material by ID.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the material to update.'
        required: true
        example: laborum
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: laborum
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The new name of the material.'
        required: true
        example: ut
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      name: ut
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "status": "success",
             "message": "Material updated successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
             "status": "error",
             "message": "Failed to update the material."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
             "status": "error",
             "message": "Material with ID {id} not found."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer afg6VkZ46bDdvca81EP3h5e'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/material/destroy/{id}'
    metadata:
      groupName: Material
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a material by ID.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
    urlParameters:
      id:
        name: id
        description: 'The ID of the material to delete.'
        required: true
        example: explicabo
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: explicabo
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "status": "success",
             "message": "Material deleted successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
             "status": "error",
             "message": "Failed to delete the material."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
             "status": "error",
             "message": "Material with ID {id} not found."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Zh5V6Dfk43bgdaa1cPve8E6'
    controller: null
    method: null
    route: null
    custom: []
