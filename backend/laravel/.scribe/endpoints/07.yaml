name: Unit
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/unit
    metadata:
      groupName: Unit
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a paginated list of units.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
    urlParameters:
      page:
        name: page
        description: 'optional The page number (default is 1).'
        required: false
        example: 13
        type: integer
        enumValues: []
        custom: []
      perpage:
        name: perpage
        description: 'optional Items per page (default is 10).'
        required: false
        example: 15
        type: integer
        enumValues: []
        custom: []
      total:
        name: total
        description: 'optional The total number of items.'
        required: false
        example: 7
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      page: 13
      perpage: 15
      total: 7
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "status": "success",
             "data": [
                 {
                     "id": 1,
                     "name": "Unit Name"
                 }
             ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer aEZDeaPVv3cf651b6d8kh4g'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/unit/create
    metadata:
      groupName: Unit
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new unit.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the unit.'
        required: true
        example: et
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      name: et
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "status": "success",
             "message": "Unit created successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
             "status": "error",
             "message": "Failed to create the unit."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 5h8kb63dEcavZ4VP1Daegf6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/unit/show/{id}'
    metadata:
      groupName: Unit
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get details of a unit by ID.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
    urlParameters:
      id:
        name: id
        description: 'The ID of the unit.'
        required: true
        example: ducimus
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: ducimus
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "status": "success",
             "data": {
                 "id": 1,
                 "name": "Unit Name"
             }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
             "status": "error",
             "message": "Unit with ID {id} not found."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer bfVeck341ghv6PE5d6Z8aaD'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/unit/update/{id}'
    metadata:
      groupName: Unit
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a unit by ID.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the unit to update.'
        required: true
        example: id
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: id
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The new name of the unit.'
        required: true
        example: quia
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      name: quia
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "status": "success",
             "message": "Unit updated successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
             "status": "error",
             "message": "Failed to update the unit."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
             "status": "error",
             "message": "Unit with ID {id} not found."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer fb64dc18kh5D3gZPaEveaV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/unit/destroy/{id}'
    metadata:
      groupName: Unit
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a unit by ID.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
    urlParameters:
      id:
        name: id
        description: 'The ID of the unit to delete.'
        required: true
        example: sunt
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: sunt
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "status": "success",
             "message": "Unit deleted successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
             "status": "error",
             "message": "Failed to delete the unit."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
             "status": "error",
             "message": "Unit with ID {id} not found."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Pg6ka4eb5fV3DZcEah8v6d1'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/unit/search
    metadata:
      groupName: Unit
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Search for units by name.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
    urlParameters:
      page:
        name: page
        description: 'optional The page number (default is 1).'
        required: false
        example: 19
        type: integer
        enumValues: []
        custom: []
      perpage:
        name: perpage
        description: 'optional Items per page (default is 10).'
        required: false
        example: 14
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      page: 19
      perpage: 14
    queryParameters:
      query:
        name: query
        description: 'The search query.'
        required: true
        example: omnis
        type: string
        enumValues: []
        custom: []
    cleanQueryParameters:
      query: omnis
    bodyParameters:
      query:
        name: query
        description: ''
        required: true
        example: ea
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      query: ea
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "status": "success",
             "data": [
                 {
                     "id": 1,
                     "name": "Unit Name"
                 }
             ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
             "status": "error",
             "message": "No units match your search."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer f4hc6aZVebk68P51DEdavg3'
    controller: null
    method: null
    route: null
    custom: []
